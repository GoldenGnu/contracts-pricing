/*
 * Contracts Appraisal
 * This is a an api to provide EVE Online pricing based on public contracts. Results are cached as shown in the Expires header. You can download the swagger.json at https://api.swaggerhub.com/apis/rihanshazih/contracts-appraisal/1.2.0/swagger.json
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eve.nikr.net.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Feedback
 */

public class Feedback implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_TYPE_ID = "type_id";
  @SerializedName(SERIALIZED_NAME_TYPE_ID)
  private Integer typeId;

  public static final String SERIALIZED_NAME_IS_BPC = "is_bpc";
  @SerializedName(SERIALIZED_NAME_IS_BPC)
  private Boolean isBpc;

  public static final String SERIALIZED_NAME_OLD_PRICE_PER_UNIT = "old_price_per_unit";
  @SerializedName(SERIALIZED_NAME_OLD_PRICE_PER_UNIT)
  private Double oldPricePerUnit;

  public static final String SERIALIZED_NAME_OLD_PRICE_TYPE = "old_price_type";
  @SerializedName(SERIALIZED_NAME_OLD_PRICE_TYPE)
  private String oldPriceType;

  public static final String SERIALIZED_NAME_SUGGESTED_PRICE_PER_UNIT = "suggested_price_per_unit";
  @SerializedName(SERIALIZED_NAME_SUGGESTED_PRICE_PER_UNIT)
  private Double suggestedPricePerUnit;

  public static final String SERIALIZED_NAME_BPC_RUNS = "bpc_runs";
  @SerializedName(SERIALIZED_NAME_BPC_RUNS)
  private Long bpcRuns;

  public static final String SERIALIZED_NAME_MATERIAL_EFFICIENCY = "material_efficiency";
  @SerializedName(SERIALIZED_NAME_MATERIAL_EFFICIENCY)
  private Integer materialEfficiency;

  public static final String SERIALIZED_NAME_TIME_EFFICIENCY = "time_efficiency";
  @SerializedName(SERIALIZED_NAME_TIME_EFFICIENCY)
  private Integer timeEfficiency;

  /**
   * Gets or Sets security
   */
  @JsonAdapter(SecurityEnum.Adapter.class)
  public enum SecurityEnum {
    HIGHSEC("highsec"),
    
    LOWSEC("lowsec"),
    
    NULLSEC("nullsec"),
    
    WORMHOLE("wormhole");

    private String value;

    SecurityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SecurityEnum fromValue(String value) {
      for (SecurityEnum b : SecurityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SecurityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SecurityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SecurityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SecurityEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_SECURITY = "security";
  @SerializedName(SERIALIZED_NAME_SECURITY)
  private List<SecurityEnum> security = new ArrayList<>();

  public Feedback typeId(Integer typeId) {
    this.typeId = typeId;
    return this;
  }

   /**
   * Get typeId
   * @return typeId
  **/
  @ApiModelProperty(example = "2049", required = true, value = "")
  public Integer getTypeId() {
    return typeId;
  }

  public void setTypeId(Integer typeId) {
    this.typeId = typeId;
  }

  public Feedback isBpc(Boolean isBpc) {
    this.isBpc = isBpc;
    return this;
  }

   /**
   * Get isBpc
   * @return isBpc
  **/
  @ApiModelProperty(example = "true", value = "")
  public Boolean getIsBpc() {
    return isBpc;
  }

  public void setIsBpc(Boolean isBpc) {
    this.isBpc = isBpc;
  }

  public Feedback oldPricePerUnit(Double oldPricePerUnit) {
    this.oldPricePerUnit = oldPricePerUnit;
    return this;
  }

   /**
   * Get oldPricePerUnit
   * @return oldPricePerUnit
  **/
  @ApiModelProperty(example = "10455.67", required = true, value = "")
  public Double getOldPricePerUnit() {
    return oldPricePerUnit;
  }

  public void setOldPricePerUnit(Double oldPricePerUnit) {
    this.oldPricePerUnit = oldPricePerUnit;
  }

  public Feedback oldPriceType(String oldPriceType) {
    this.oldPriceType = oldPriceType;
    return this;
  }

   /**
   * Get oldPriceType
   * @return oldPriceType
  **/
  @ApiModelProperty(example = "five_percent", required = true, value = "")
  public String getOldPriceType() {
    return oldPriceType;
  }

  public void setOldPriceType(String oldPriceType) {
    this.oldPriceType = oldPriceType;
  }

  public Feedback suggestedPricePerUnit(Double suggestedPricePerUnit) {
    this.suggestedPricePerUnit = suggestedPricePerUnit;
    return this;
  }

   /**
   * Get suggestedPricePerUnit
   * @return suggestedPricePerUnit
  **/
  @ApiModelProperty(example = "8531.49", value = "")
  public Double getSuggestedPricePerUnit() {
    return suggestedPricePerUnit;
  }

  public void setSuggestedPricePerUnit(Double suggestedPricePerUnit) {
    this.suggestedPricePerUnit = suggestedPricePerUnit;
  }

  public Feedback bpcRuns(Long bpcRuns) {
    this.bpcRuns = bpcRuns;
    return this;
  }

   /**
   * Get bpcRuns
   * @return bpcRuns
  **/
  @ApiModelProperty(example = "19285218427", value = "")
  public Long getBpcRuns() {
    return bpcRuns;
  }

  public void setBpcRuns(Long bpcRuns) {
    this.bpcRuns = bpcRuns;
  }

  public Feedback materialEfficiency(Integer materialEfficiency) {
    this.materialEfficiency = materialEfficiency;
    return this;
  }

   /**
   * Get materialEfficiency
   * @return materialEfficiency
  **/
  @ApiModelProperty(example = "10", value = "")
  public Integer getMaterialEfficiency() {
    return materialEfficiency;
  }

  public void setMaterialEfficiency(Integer materialEfficiency) {
    this.materialEfficiency = materialEfficiency;
  }

  public Feedback timeEfficiency(Integer timeEfficiency) {
    this.timeEfficiency = timeEfficiency;
    return this;
  }

   /**
   * Get timeEfficiency
   * @return timeEfficiency
  **/
  @ApiModelProperty(example = "20", value = "")
  public Integer getTimeEfficiency() {
    return timeEfficiency;
  }

  public void setTimeEfficiency(Integer timeEfficiency) {
    this.timeEfficiency = timeEfficiency;
  }

  public Feedback security(List<SecurityEnum> security) {
    this.security = security;
    return this;
  }

  public Feedback addSecurityItem(SecurityEnum securityItem) {
    if (this.security == null) {
      this.security = new ArrayList<>();
    }
    this.security.add(securityItem);
    return this;
  }

   /**
   * Get security
   * @return security
  **/
  @ApiModelProperty(value = "")
  public List<SecurityEnum> getSecurity() {
    return security;
  }

  public void setSecurity(List<SecurityEnum> security) {
    this.security = security;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Feedback feedback = (Feedback) o;
    return Objects.equals(this.typeId, feedback.typeId) &&
        Objects.equals(this.isBpc, feedback.isBpc) &&
        Objects.equals(this.oldPricePerUnit, feedback.oldPricePerUnit) &&
        Objects.equals(this.oldPriceType, feedback.oldPriceType) &&
        Objects.equals(this.suggestedPricePerUnit, feedback.suggestedPricePerUnit) &&
        Objects.equals(this.bpcRuns, feedback.bpcRuns) &&
        Objects.equals(this.materialEfficiency, feedback.materialEfficiency) &&
        Objects.equals(this.timeEfficiency, feedback.timeEfficiency) &&
        Objects.equals(this.security, feedback.security);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeId, isBpc, oldPricePerUnit, oldPriceType, suggestedPricePerUnit, bpcRuns, materialEfficiency, timeEfficiency, security);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Feedback {\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("    isBpc: ").append(toIndentedString(isBpc)).append("\n");
    sb.append("    oldPricePerUnit: ").append(toIndentedString(oldPricePerUnit)).append("\n");
    sb.append("    oldPriceType: ").append(toIndentedString(oldPriceType)).append("\n");
    sb.append("    suggestedPricePerUnit: ").append(toIndentedString(suggestedPricePerUnit)).append("\n");
    sb.append("    bpcRuns: ").append(toIndentedString(bpcRuns)).append("\n");
    sb.append("    materialEfficiency: ").append(toIndentedString(materialEfficiency)).append("\n");
    sb.append("    timeEfficiency: ").append(toIndentedString(timeEfficiency)).append("\n");
    sb.append("    security: ").append(toIndentedString(security)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

